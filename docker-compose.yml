services:
  devtasker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: devtasker
    ports:
      - 3000:3000
    restart: unless-stopped
    networks:
      - monitor
    env_file:
      - .devtasker.env
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      retries: 5

  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    networks:
      - monitor
    env_file:
      - .postgres.env
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090             # host:container
    restart: unless-stopped
    networks:
      - monitor
    volumes:
      - ./monitor/prometheus:/etc/prometheus
      - prom_data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 10s
      retries: 5

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3001:3001
    networks:
      - monitor
    restart: unless-stopped
    env_file:
      - .grafana.env
    volumes:
      - ./monitor/grafana:/etc/grafana/provisioning/datasources
      - grafana_data:/grafana
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001"]
      interval: 10s
      retries: 5
  
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - devtasker
      - prometheus
      - grafana
    networks:
      - monitor
    # healthcheck:
    #   test: ["CMD", "wget", "--spider", "-q", "http://localhost"]
    #   interval: 10s
    #   retries: 5

volumes:
  db_data:
  prom_data:
  grafana_data:

networks:
  monitor:
    driver: bridge
